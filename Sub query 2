-- Using a sub query in the SELECT statement
----- allows you to get an aggregate function in a column without using GROUP BY

select PRO_NUM,
       REFERENCE_NUM,
       (select round(avg(INVOICE_TOTAL), 2) from ALJEX_T) as "AVG INVOICE TOTAL"

from ALJEX_T

where PICKUP_APPOINTMENT_DATE = trunc(sysdate);


-- Using a sub query in the FROM statement
----- Inner query gets: volume of each Frito Lay customer in past 50 days
----- Outer query gets: the average of the (volume of the Frito Lay customer in past 50 days)

select 'FRITO LAY CUSTOMERS' as CUSTOMER,
       round(avg(SUB.VOLUME), 2) as "AVG VOLUME"
FROM

(select ALJEX_CUST_T.NAME as CUSTOMER,
       count(ALJEX_T.PRO_NUM) as VOLUME
from ALJEX_T
join ALJEX_CUST_T
on ALJEX_T.CUSTOMER_ACCOUNT_NUM = ALJEX_CUST_T.ACCOUNT_NUM
where PICKUP_APPOINTMENT_DATE between trunc(sysdate-50) and trunc(sysdate)
and ALJEX_CUST_T.NAME like 'FRITO%'
group by ALJEX_CUST_T.NAME) SUB;


-- Using a sub query in the WHERE statement
----- used to get all data from a table (ALJEX_T) with a condition from another table (ALJEX_CUST_T) without JOIN
-------- query gets all (todays) data from ALJEX_T for only FRITO LAY customer accounts

select *

from ALJEX_T

where ALJEX_T.CUSTOMER_ACCOUNT_NUM in (select ALJEX_CUST_T.ACCOUNT_NUM from ALJEX_CUST_T where ALJEX_CUST_T.NAME like 'FRITO%')
and ALJEX_T.PICKUP_APPOINTMENT_DATE = trunc(sysdate);






